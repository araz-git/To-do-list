{"ast":null,"code":"var _jsxFileName = \"/home/priest/Documents/CODE/Portfolio/React/task-board-full/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Plus from './UI/Plus';\nimport Trash from './UI/Trash';\nimport Edit from './UI/Edit';\nimport Tick from './UI/Tick';\nimport Cancel from './UI/Cancel';\nimport Input from './UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Loads tasks from local storage\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem('boards')) || [{\n    title: 'To Do',\n    tasks: []\n  }, {\n    title: 'In Progress',\n    tasks: []\n  }, {\n    title: 'Done',\n    tasks: []\n  }]);\n  const [newTaskBody, setNewTaskBody] = useState(null);\n  let newTasks = [...boards];\n  const [currentTask, setCurrentTask] = useState(null);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [insertIndex, setInsertIndex] = useState(null);\n  const [endBoard, setEndBoard] = useState(null);\n  const [emptyBoard, setEmptyBoard] = useState(null);\n\n  //Saves tasks to local storage\n  useEffect(() => localStorage.setItem('boards', JSON.stringify(boards)), [boards]);\n\n  //Adds a task on plus click\n  function addTask(board) {\n    newTasks[newTasks.indexOf(board)].tasks.push({\n      id: Math.round(Math.random() * 10000),\n      body: 'New task'\n    });\n    setBoards(newTasks);\n  }\n\n  //Deletes a task from a list on trash click\n  function removeTask(e, board, task) {\n    e.stopPropagation();\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    newTasks[boardIndex].tasks.splice(taskIndex, 1);\n    setBoards(newTasks);\n  }\n\n  //Task enters editing mode on edit click\n  function editTaskName(e, board, task) {\n    e.stopPropagation();\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    newTasks.map(item => item.tasks.map(innerItem => innerItem.edit = false));\n    newTasks[boardIndex].tasks[taskIndex].edit = true;\n    setBoards(newTasks);\n    setNewTaskBody(task.body);\n  }\n\n  //Task name changes are saved on tick click\n  function saveTaskName(e, board, task) {\n    e.stopPropagation();\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    newTasks[boardIndex].tasks[taskIndex].edit = false;\n    if (newTaskBody) {\n      newTasks[boardIndex].tasks[taskIndex].body = newTaskBody;\n    }\n    setBoards(newTasks);\n    setNewTaskBody(null);\n  }\n\n  //Activartes saveTaskName (Enter) and cancelChangeTaskName(Escape) on key presses\n  function saveTaskNameEnter(e, board, task) {\n    if (e.key === 'Enter') {\n      saveTaskName(e, board, task);\n    }\n    if (e.key === 'Escape') {\n      cancelChangeTaskName(e, board, task);\n    }\n  }\n\n  //Task name changes in input and can be saved in another function\n  function changeTaskName(e) {\n    const {\n      value\n    } = e.target;\n    setNewTaskBody(value);\n  }\n  function cancelChangeTaskName(e, board, task) {\n    e.stopPropagation();\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    newTasks[boardIndex].tasks[taskIndex].edit = false;\n    setBoards(newTasks);\n    setNewTaskBody(null);\n  }\n  function cancelAll(e) {\n    const {\n      id\n    } = e.target;\n    if (id === 'App') {\n      newTasks.map(item => item.tasks.map(innerItem => innerItem.edit = false));\n      setBoards(newTasks);\n    }\n  }\n  function handleDragStart(e, board, task) {\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    cancelChangeTaskName(e, board, task);\n    setDeleteIndex(taskIndex);\n    setCurrentTask(task);\n  }\n  function handleDragOver(e, board, task) {\n    const {\n      style\n    } = e.target;\n    const boardIndex = newTasks.indexOf(board);\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task);\n    setInsertIndex(taskIndex);\n    setEndBoard(board);\n    if (deleteIndex < insertIndex) {\n      style.borderBottom = '1px solid black';\n    } else {\n      style.borderTop = '1px solid black';\n    }\n  }\n  function handleDragLeave(e) {\n    const {\n      style\n    } = e.target;\n    style.border = \"\";\n    style.margin = '';\n  }\n  function overEmptyBoard(board) {\n    const boardIndex = newTasks.indexOf(board);\n    newTasks[boardIndex].tasks[0] ? setEmptyBoard(null) : setEmptyBoard(board);\n  }\n  function handleDragEnd(board) {\n    const boardIndex = newTasks.indexOf(board);\n    const emptyBoardIndex = newTasks.indexOf(emptyBoard);\n    const endBoardIndex = newTasks.indexOf(endBoard);\n    newTasks[boardIndex].tasks.splice(deleteIndex, 1);\n    !emptyBoard && newTasks[endBoardIndex].tasks.splice(insertIndex, 0, currentTask);\n    emptyBoard && newTasks[emptyBoardIndex].tasks.push(currentTask);\n    setBoards(newTasks);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    className: \"flex center-hor\",\n    onClick: e => cancelAll(e),\n    children: boards.map(board => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        id: board.title,\n        onDragOver: () => overEmptyBoard(board),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Plus, {\n          handleClick: () => addTask(board)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), board.tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task flex center-ver\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, board, task),\n            onDragOver: e => handleDragOver(e, board, task),\n            onDragLeave: e => handleDragLeave(e),\n            onDragEnd: e => handleDragEnd(board),\n            children: [task.edit && /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \" \",\n              onChange: e => changeTaskName(e),\n              onKeyDown: e => saveTaskNameEnter(e, board, task),\n              value: newTaskBody,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), !task.edit && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task-body\",\n              onClick: e => editTaskName(e, board, task),\n              children: task.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [task.edit && /*#__PURE__*/_jsxDEV(Cancel, {\n                handleClick: e => cancelChangeTaskName(e, board, task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), task.edit && /*#__PURE__*/_jsxDEV(Tick, {\n                handleClick: e => saveTaskName(e, board, task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), !task.edit && /*#__PURE__*/_jsxDEV(Trash, {\n                handleClick: e => removeTask(e, board, task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 34\n              }, this), !task.edit && /*#__PURE__*/_jsxDEV(Edit, {\n                handleClick: e => editTaskName(e, board, task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this);\n        })]\n      }, board.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+mf8q+hFwVhTl+AwrTpn8b5n/cM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Plus","Trash","Edit","Tick","Cancel","Input","jsxDEV","_jsxDEV","App","_s","boards","setBoards","JSON","parse","localStorage","getItem","title","tasks","newTaskBody","setNewTaskBody","newTasks","currentTask","setCurrentTask","deleteIndex","setDeleteIndex","insertIndex","setInsertIndex","endBoard","setEndBoard","emptyBoard","setEmptyBoard","setItem","stringify","addTask","board","indexOf","push","id","Math","round","random","body","removeTask","e","task","stopPropagation","boardIndex","taskIndex","splice","editTaskName","map","item","innerItem","edit","saveTaskName","saveTaskNameEnter","key","cancelChangeTaskName","changeTaskName","value","target","cancelAll","handleDragStart","handleDragOver","style","borderBottom","borderTop","handleDragLeave","border","margin","overEmptyBoard","handleDragEnd","emptyBoardIndex","endBoardIndex","className","onClick","children","onDragOver","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","draggable","onDragStart","onDragLeave","onDragEnd","placeholder","onChange","onKeyDown","autoFocus","_c","$RefreshReg$"],"sources":["/home/priest/Documents/CODE/Portfolio/React/task-board-full/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport Plus from './UI/Plus';\nimport Trash from './UI/Trash';\nimport Edit from './UI/Edit';\nimport Tick from './UI/Tick';\nimport Cancel from './UI/Cancel';\nimport Input from './UI/Input';\n\nfunction App() {\n\n  //Loads tasks from local storage\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem('boards')) || [\n    {title: 'To Do', tasks: []}, {title: 'In Progress', tasks: []}, {title: 'Done', tasks: []}]\n  )\n  const [newTaskBody, setNewTaskBody] = useState(null)\n  let newTasks = [...boards]\n\n  const [currentTask, setCurrentTask] = useState(null)\n  \n  const [deleteIndex, setDeleteIndex] = useState(null)\n  const [insertIndex, setInsertIndex] = useState(null)\n\n  const [endBoard , setEndBoard] = useState(null)\n  const [emptyBoard, setEmptyBoard] = useState(null)\n\n\n  //Saves tasks to local storage\n  useEffect(() => localStorage.setItem('boards', JSON.stringify(boards)), [boards])\n  \n  //Adds a task on plus click\n  function addTask(board) {\n    newTasks[newTasks.indexOf(board)].tasks.push({id: Math.round(Math.random()*10000), body: 'New task'})\n    setBoards(newTasks)\n  }\n\n  //Deletes a task from a list on trash click\n  function removeTask(e, board, task) {\n    e.stopPropagation()\n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    newTasks[boardIndex].tasks.splice(taskIndex, 1)\n    setBoards(newTasks)\n  }\n\n  //Task enters editing mode on edit click\n  function editTaskName(e, board, task) {\n    e.stopPropagation()\n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    newTasks.map(item => item.tasks.map(innerItem => innerItem.edit = false))\n    newTasks[boardIndex].tasks[taskIndex].edit = true\n    setBoards(newTasks)\n    setNewTaskBody(task.body)\n  }\n\n  //Task name changes are saved on tick click\n  function saveTaskName(e, board, task) {\n    e.stopPropagation()\n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    newTasks[boardIndex].tasks[taskIndex].edit = false\n    if (newTaskBody) {\n      newTasks[boardIndex].tasks[taskIndex].body = newTaskBody\n    }\n    setBoards(newTasks)\n    setNewTaskBody(null)  \n  }\n\n  //Activartes saveTaskName (Enter) and cancelChangeTaskName(Escape) on key presses\n  function saveTaskNameEnter(e, board, task) {\n    if (e.key === 'Enter') {\n      saveTaskName(e, board, task)\n    }\n    if (e.key === 'Escape') {\n      cancelChangeTaskName(e, board, task)\n    }\n  }\n  \n  //Task name changes in input and can be saved in another function\n  function changeTaskName(e) {\n    const {value} = e.target\n    setNewTaskBody(value)\n  }\n\n\n  function cancelChangeTaskName(e, board, task) {\n    e.stopPropagation()\n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    newTasks[boardIndex].tasks[taskIndex].edit = false\n    setBoards(newTasks)\n    setNewTaskBody(null)  \n  }\n\n  function cancelAll(e) {\n    const {id} = e.target\n    if (id === 'App') {\n      newTasks.map(item => item.tasks.map(innerItem => innerItem.edit = false))\n      setBoards(newTasks)\n    }\n  }\n\n  function handleDragStart(e, board, task) {    \n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    cancelChangeTaskName(e, board, task)\n    setDeleteIndex(taskIndex)\n    setCurrentTask(task)\n  }\n\n  function handleDragOver(e, board, task) {\n    const {style} = e.target\n    const boardIndex = newTasks.indexOf(board)\n    const taskIndex = newTasks[boardIndex].tasks.indexOf(task)\n    setInsertIndex(taskIndex)\n    setEndBoard(board)\n\n    if (deleteIndex < insertIndex) {\n      style.borderBottom = '1px solid black'\n    } \n    else{\n      style.borderTop = '1px solid black'\n    }\n  }\n\n  function handleDragLeave(e) {\n    const {style} = e.target;\n    style.border=\"\"\n    style.margin=''\n  }\n\n  function overEmptyBoard(board){\n    const boardIndex = newTasks.indexOf(board)\n    \n    newTasks[boardIndex].tasks[0] \n    ? setEmptyBoard(null)\n    : setEmptyBoard(board)\n  }\n\n  \n  function handleDragEnd(board) {\n    const boardIndex = newTasks.indexOf(board)\n    const emptyBoardIndex = newTasks.indexOf(emptyBoard)\n    const endBoardIndex = newTasks.indexOf(endBoard)\n    newTasks[boardIndex].tasks.splice(deleteIndex, 1)\n    !emptyBoard && newTasks[endBoardIndex].tasks.splice(insertIndex, 0, currentTask);\n    emptyBoard && newTasks[emptyBoardIndex].tasks.push(currentTask);\n    setBoards(newTasks)\n  }\n  \n\n  return (\n    <div\n      id='App'\n      className='flex center-hor'\n      onClick={(e) => cancelAll(e)}\n    >\n      {boards.map(board => {\n        return (\n          <div\n            key={board.title} \n            className='board'\n            id={board.title}\n            onDragOver={() => overEmptyBoard(board)}\n          >\n            <h2>{board.title}</h2>\n            <Plus handleClick={() => addTask(board)}/>\n            {board.tasks.map( task => {\n              return (\n              <div \n                key={task.id}\n                className='task flex center-ver'\n                draggable\n                onDragStart={(e) => handleDragStart(e, board, task)}\n                onDragOver={(e) => handleDragOver(e, board, task)}\n                onDragLeave={(e) => handleDragLeave(e)}\n                onDragEnd={(e) => handleDragEnd(board)}\n              >\n                {task.edit && \n                  <Input \n                    placeholder=' '\n                    onChange={(e) => changeTaskName(e)}\n                    onKeyDown={(e) => saveTaskNameEnter(e, board, task)}\n                    value={newTaskBody}\n                    autoFocus \n                  />}\n                {!task.edit && <span className='task-body' onClick={(e) => editTaskName(e, board, task)}>{task.body}</span>}\n                <div className='actions'>\n                  {task.edit && <Cancel handleClick={(e) => cancelChangeTaskName(e, board, task)}/>}\n                  {task.edit && <Tick handleClick={(e) => saveTaskName(e, board, task)}/>}\n                  {!task.edit && <Trash handleClick={(e) => removeTask(e, board, task)}/>}\n                  {!task.edit && <Edit handleClick={(e) => editTaskName(e, board, task)}/>}\n                </div>\n              </div>)\n            })}\n          </div>)\n        })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}